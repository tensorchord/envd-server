
{{- $dburl := printf "postgres://%s:%s@postgres-service:5432/%s?sslmode=disable" .Values.postgres.username .Values.postgres.password .Values.postgres.dbname -}}
{{- if .Values.dbUrl -}}
{{- $dburl = .Values.dbUrl -}}
{{- end -}}
{{- $migrationImage := printf "%s-migration:v%s" .Values.image.repository .Values.image.tag -}}
{{- if .Values.server.migrationImage -}}
{{- $migrationImage = .Values.server.migrationImage -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "envd-server.fullname" . }}
  labels:
    {{- include "envd-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "envd-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "envd-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccount: {{ include "envd-server.serviceAccountName" . }}
      serviceAccountName: {{ include "envd-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - configMap:
            name: {{ include "envd-server.fullname" . }}
          name: config
        - secret:
            secretName: {{ include "envd-server.fullname" . }}
            defaultMode: 0666
          name: secret
        {{- if .Values.server.imagePullSecret }}
        - secret:
            secretName: {{ .Values.server.imagePullSecret }}
            defaultMode: 0666
          name: image-pull-secret
        {{- end }}
      {{- if .Values.server.migration }}      
      initContainers:
      - name: migrate
        image: {{ $migrationImage }}
        imagePullPolicy: Always
        args: ["migrate", "apply", "--url", "$(ENVD_DB_URL)", "--dir=file://migrations/?format=goose", "--allow-dirty"]
        env:
          - name: ENVD_DB_URL
            value: {{ $dburl }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ENVD_DB_URL
              value: {{ $dburl }}
              {{- if .Values.server.debug }}
            - name: GIN_MODE          
              value: debug
              {{- end }}
          command:
            - /envd-server
            - --hostkey
            - /etc/containerssh/hostkey
            {{- if .Values.server.noauth }}
            - --no-auth
            {{- end }}
            {{- if .Values.server.imagePullSecret }}
            - --image-pull-secret-name
            - {{ .Values.server.imagePullSecret }}
            {{- end }}
          ports:
            - name: envdserver
              containerPort: 8080
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /v1
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /v1
          #     port: http
          volumeMounts:
            - mountPath: /etc/containerssh/hostkey
              name: secret
              subPath: hostkey
            {{- if .Values.server.imagePullSecret }}
            - mountPath: /root/.docker/config.json
              name: image-pull-secret
              subPath: .dockerconfigjson
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
        - name: containerssh
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.containersshimage.repository }}:{{ .Values.containersshimage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.containersshimage.pullPolicy }}
          ports:
            - name: ssh
              containerPort: 2222
              protocol: TCP
            - name: metrics
              containerPort: 9100
              protocol: TCP
          volumeMounts:
          - mountPath: /etc/containerssh/config.yaml
            name: config
            subPath: config.yaml
          - mountPath: /etc/containerssh/hostkey
            name: secret
            subPath: hostkey
          - mountPath: /etc/containerssh/privatekey
            name: secret
            subPath: privatekey
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
